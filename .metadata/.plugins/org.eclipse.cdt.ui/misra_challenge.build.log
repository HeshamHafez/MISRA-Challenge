
**** Build of configuration Debug for project misra_challenge ****

"C:\\ti\\ccs901\\ccs\\utils\\bin\\gmake" -k -j 4 all -O 
 
Building file: "../BLMGR.c"
Invoking: ARM Compiler
"C:/ti/ccs901/ccs/tools/compiler/ti-cgt-arm_18.12.1.LTS/bin/armcl" -mv4 --code_state=32 --include_path="D:/HH-geegs/Sprints/MISRA_challenge/misra_challenge" --include_path="C:/ti/ccs901/ccs/tools/compiler/ti-cgt-arm_18.12.1.LTS/include" -g --diag_warning=225 --diag_wrap=off --display_error_number --check_misra="all,-1" --misra_advisory=error --misra_required=error --preproc_with_compile --preproc_dependency="BLMGR.d_raw"  "../BLMGR.c"
 
>> Compilation failure
subdir_rules.mk:9: recipe for target 'BLMGR.obj' failed
"../BLMGR.c", line 629: error #1422-D: (MISRA-C:2004 16.9/R) A function identifier shall only be used with either a preceding &, or with a parenthesised parameter list, which may be empty (function "RxBufferDnCallBackNotif")
"../BLMGR.c", line 648: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 650: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 651: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 653: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 655: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 659: error #1422-D: (MISRA-C:2004 16.9/R) A function identifier shall only be used with either a preceding &, or with a parenthesised parameter list, which may be empty (function "RxBufferDnCallBackNotif")
"../BLMGR.c", line 682: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 698: error #1422-D: (MISRA-C:2004 16.9/R) A function identifier shall only be used with either a preceding &, or with a parenthesised parameter list, which may be empty (function "RxBufferDnCallBackNotif")
"../BLMGR.c", line 714: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 716: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 717: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 719: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 721: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 747: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 770: error #1497-D: (MISRA-C:2004 5.7/A) No identifier name should be reused ("IsFrameValid")
"../BLMGR.c", line 794: error #1422-D: (MISRA-C:2004 16.9/R) A function identifier shall only be used with either a preceding &, or with a parenthesised parameter list, which may be empty (function "RxBufferDnCallBackNotif")
"../BLMGR.c", line 804: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 806: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 807: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 808: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 811: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 813: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 819: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 830: error #1455-D: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"../BLMGR.c", line 832: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 859: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 859: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 861: error #137: struct "<unnamed>" has no field "PortMask"
"../BLMGR.c", line 861: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is not constant and is a function argument
"../BLMGR.c", line 862: error #1384-D: (MISRA-C:2004 8.1/R) Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call ("_delay_ms")
"../BLMGR.c", line 862: error #1386-D: (MISRA-C:2004 8.6/R) Functions shall be declared at file scope (function "_delay_ms")
"../BLMGR.c", line 862: warning #225-D: function "_delay_ms" declared implicitly
"../BLMGR.c", line 863: error #1406-D: (MISRA-C:2004 12.7/R) Bitwise operators shall not be applied to operands whose underlying type is signed
"../BLMGR.c", line 863: error #137: struct "<unnamed>" has no field "PortMask"
"../BLMGR.c", line 863: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is not constant and is a function argument
"../BLMGR.c", line 863: warning #70-D: integer conversion resulted in truncation
"../BLMGR.c", line 884: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is not constant and is a function argument
"../BLMGR.c", line 886: error #1460-D: (MISRA-C:2004 16.7/A) A pointer parameter in a function prototype should be declared as pointer to const if the pointer is not used to modify the addressed object ("DeviceName: const u8 []")
"../BLMGR.c", line 894: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is not constant and is a function argument
"../BLMGR.c", line 894: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is not constant and is a function argument
"../BLMGR.c", line 902: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 908: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is not constant and is a function argument
"../BLMGR.c", line 910: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is not constant and is a function argument
"../BLMGR.c", line 912: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 914: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is not constant and is a function argument
"../BLMGR.c", line 914: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is not constant and is a function argument
"../BLMGR.c", line 919: error #1497-D: (MISRA-C:2004 5.7/A) No identifier name should be reused ("IsFrameValid")
"../BLMGR.c", line 922: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 928: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 929: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 929: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 930: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 945: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 957: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is not constant and is a function argument
"../BLMGR.c", line 959: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 965: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 972: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 979: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 986: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 993: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 1000: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 1013: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is not constant and is a function argument
"../BLMGR.c", line 1013: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is not constant and is a function argument
"../BLMGR.c", line 1021: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 1024: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is not constant and is a function argument
"../BLMGR.c", line 1024: error #1390-D: (MISRA-C:2004 9.1/R) All automatic variables shall have been assigned a value before being used (variable "CrcKey")
"../BLMGR.c", line 1031: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is not constant and is a function argument
"../BLMGR.c", line 1032: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 1032: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is not constant and is a function argument
"../BLMGR.c", line 1032: error #1390-D: (MISRA-C:2004 9.1/R) All automatic variables shall have been assigned a value before being used (variable "Crc")
"../BLMGR.c", line 1035: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 1037: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is not constant and is a function argument
"../BLMGR.c", line 1039: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 1041: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is not constant and is a function argument
"../BLMGR.c", line 1041: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is not constant and is a function argument
"../BLMGR.c", line 1046: error #1497-D: (MISRA-C:2004 5.7/A) No identifier name should be reused ("IsFrameValid")
"../BLMGR.c", line 1047: error #1497-D: (MISRA-C:2004 5.7/A) No identifier name should be reused ("TempVar")
"../BLMGR.c", line 1049: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 1053: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 1054: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 1054: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 1055: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 1081: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 1089: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 1096: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 1103: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 1110: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 1122: error #1497-D: (MISRA-C:2004 5.7/A) No identifier name should be reused ("TempBuffer")
"../BLMGR.c", line 1123: error #1497-D: (MISRA-C:2004 5.7/A) No identifier name should be reused ("Crc")
"../BLMGR.c", line 1127: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is not constant and is a function argument
"../BLMGR.c", line 1127: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is not constant and is a function argument
"../BLMGR.c", line 1136: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 1140: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is not constant and is a function argument
"../BLMGR.c", line 1141: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is not constant and is a function argument
"../BLMGR.c", line 1141: error #1390-D: (MISRA-C:2004 9.1/R) All automatic variables shall have been assigned a value before being used (variable "Crc")
"../BLMGR.c", line 1158: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 1160: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../BLMGR.c", line 1162: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is not constant and is a function argument
"../BLMGR.c", line 1162: error #1393-D: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is not constant and is a function argument
"../BLMGR.c", line 1167: error #1497-D: (MISRA-C:2004 5.7/A) No identifier name should be reused ("TempBuffer")
"../BLMGR.c", line 1168: error #1497-D: (MISRA-C:2004 5.7/A) No identifier name should be reused ("IsFrameValid")
Error limit reached.
100 errors detected in the compilation of "../BLMGR.c".
Compilation terminated.
gmake: *** [BLMGR.obj] Error 1
Building file: "../CRC.c"
Invoking: ARM Compiler
"C:/ti/ccs901/ccs/tools/compiler/ti-cgt-arm_18.12.1.LTS/bin/armcl" -mv4 --code_state=32 --include_path="D:/HH-geegs/Sprints/MISRA_challenge/misra_challenge" --include_path="C:/ti/ccs901/ccs/tools/compiler/ti-cgt-arm_18.12.1.LTS/include" -g --diag_warning=225 --diag_wrap=off --display_error_number --check_misra="all,-1" --misra_advisory=error --misra_required=error --preproc_with_compile --preproc_dependency="CRC.d_raw"  "../CRC.c"
 
>> Compilation failure
subdir_rules.mk:9: recipe for target 'CRC.obj' failed
"C:/ti/ccs901/ccs/tools/compiler/ti-cgt-arm_18.12.1.LTS/include/stdlib.h", line 64: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
1 error detected in the compilation of "../CRC.c".
gmake: *** [CRC.obj] Error 1
Building file: "../BLTD.c"
Invoking: ARM Compiler
"C:/ti/ccs901/ccs/tools/compiler/ti-cgt-arm_18.12.1.LTS/bin/armcl" -mv4 --code_state=32 --include_path="D:/HH-geegs/Sprints/MISRA_challenge/misra_challenge" --include_path="C:/ti/ccs901/ccs/tools/compiler/ti-cgt-arm_18.12.1.LTS/include" -g --diag_warning=225 --diag_wrap=off --display_error_number --check_misra="all,-1" --misra_advisory=error --misra_required=error --preproc_with_compile --preproc_dependency="BLTD.d_raw"  "../BLTD.c"
 
>> Compilation failure
subdir_rules.mk:9: recipe for target 'BLTD.obj' failed
"../BLTD.c", line 90: error #1460-D: (MISRA-C:2004 16.7/A) A pointer parameter in a function prototype should be declared as pointer to const if the pointer is not used to modify the addressed object ("Data: const u8 *")
"../BLTD.c", line 145: error #1460-D: (MISRA-C:2004 16.7/A) A pointer parameter in a function prototype should be declared as pointer to const if the pointer is not used to modify the addressed object ("Des: const u8 *")
2 errors detected in the compilation of "../BLTD.c".
gmake: *** [BLTD.obj] Error 1
Building file: "../L3G4200D.c"
Invoking: ARM Compiler
"C:/ti/ccs901/ccs/tools/compiler/ti-cgt-arm_18.12.1.LTS/bin/armcl" -mv4 --code_state=32 --include_path="D:/HH-geegs/Sprints/MISRA_challenge/misra_challenge" --include_path="C:/ti/ccs901/ccs/tools/compiler/ti-cgt-arm_18.12.1.LTS/include" -g --diag_warning=225 --diag_wrap=off --display_error_number --check_misra="all,-1" --misra_advisory=error --misra_required=error --preproc_with_compile --preproc_dependency="L3G4200D.d_raw"  "../L3G4200D.c"
 
>> Compilation failure
subdir_rules.mk:9: recipe for target 'L3G4200D.obj' failed
"..\L3G4200D.h", line 35: warning #1-D: last line of file ends without a newline
"..\SPI.h", line 19: warning #1-D: last line of file ends without a newline
"..\L3G4200D_Cfg.h", line 16: error #1428-D: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"..\L3G4200D_Cfg.h", line 17: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"..\L3G4200D_Cfg.h", line 18: error #1428-D: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"..\L3G4200D_Cfg.h", line 18: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"..\L3G4200D_Cfg.h", line 19: error #1428-D: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"..\L3G4200D_Cfg.h", line 19: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"..\L3G4200D_Cfg.h", line 30: error #1428-D: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"..\L3G4200D_Cfg.h", line 31: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"..\L3G4200D_Lcfg.h", line 17: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"..\L3G4200D_Lcfg.h", line 83: warning #1-D: last line of file ends without a newline
"..\SPI.h", line 19: warning #1-D: last line of file ends without a newline
"../L3G4200D.c", line 45: error #1428-D: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../L3G4200D.c", line 48: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../L3G4200D.c", line 50: error #1428-D: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../L3G4200D.c", line 50: error #1430-D: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "ADD" is used as an operand of # or ##.
"../L3G4200D.c", line 53: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../L3G4200D.c", line 56: error #1428-D: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../L3G4200D.c", line 56: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../L3G4200D.c", line 57: error #1428-D: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../L3G4200D.c", line 57: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../L3G4200D.c", line 58: error #1428-D: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../L3G4200D.c", line 58: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../L3G4200D.c", line 59: error #1428-D: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../L3G4200D.c", line 59: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../L3G4200D.c", line 60: error #1428-D: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../L3G4200D.c", line 60: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../L3G4200D.c", line 61: error #1428-D: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../L3G4200D.c", line 61: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../L3G4200D.c", line 62: error #1428-D: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../L3G4200D.c", line 62: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../L3G4200D.c", line 63: error #1428-D: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../L3G4200D.c", line 63: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../L3G4200D.c", line 64: error #1428-D: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../L3G4200D.c", line 64: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../L3G4200D.c", line 65: error #1428-D: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../L3G4200D.c", line 65: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../L3G4200D.c", line 66: error #1428-D: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../L3G4200D.c", line 66: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../L3G4200D.c", line 67: error #1428-D: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../L3G4200D.c", line 67: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../L3G4200D.c", line 68: error #1428-D: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../L3G4200D.c", line 68: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../L3G4200D.c", line 69: error #1428-D: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../L3G4200D.c", line 69: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../L3G4200D.c", line 70: error #1428-D: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../L3G4200D.c", line 70: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../L3G4200D.c", line 71: error #1428-D: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../L3G4200D.c", line 71: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../L3G4200D.c", line 72: error #1428-D: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../L3G4200D.c", line 72: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../L3G4200D.c", line 73: error #1428-D: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../L3G4200D.c", line 73: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../L3G4200D.c", line 74: error #1428-D: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../L3G4200D.c", line 74: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../L3G4200D.c", line 75: error #1428-D: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../L3G4200D.c", line 75: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../L3G4200D.c", line 76: error #1428-D: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../L3G4200D.c", line 76: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../L3G4200D.c", line 77: error #1428-D: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../L3G4200D.c", line 77: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../L3G4200D.c", line 78: error #1428-D: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../L3G4200D.c", line 78: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../L3G4200D.c", line 79: error #1428-D: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../L3G4200D.c", line 79: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../L3G4200D.c", line 80: error #1428-D: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../L3G4200D.c", line 80: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../L3G4200D.c", line 81: error #1428-D: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../L3G4200D.c", line 81: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../L3G4200D.c", line 82: error #1428-D: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../L3G4200D.c", line 82: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../L3G4200D.c", line 83: error #1428-D: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../L3G4200D.c", line 83: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../L3G4200D.c", line 84: error #1428-D: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../L3G4200D.c", line 84: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../L3G4200D.c", line 85: error #1428-D: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../L3G4200D.c", line 85: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../L3G4200D.c", line 86: error #1428-D: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../L3G4200D.c", line 86: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../L3G4200D.c", line 87: error #1428-D: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../L3G4200D.c", line 87: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../L3G4200D.c", line 88: error #1428-D: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../L3G4200D.c", line 88: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../L3G4200D.c", line 89: error #1428-D: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../L3G4200D.c", line 89: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../L3G4200D.c", line 90: error #1428-D: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../L3G4200D.c", line 90: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../L3G4200D.c", line 91: error #1428-D: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../L3G4200D.c", line 91: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../L3G4200D.c", line 92: error #1428-D: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../L3G4200D.c", line 92: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../L3G4200D.c", line 93: error #1428-D: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../L3G4200D.c", line 93: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../L3G4200D.c", line 94: error #1428-D: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../L3G4200D.c", line 94: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../L3G4200D.c", line 95: error #1428-D: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../L3G4200D.c", line 95: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../L3G4200D.c", line 96: error #1428-D: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../L3G4200D.c", line 96: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../L3G4200D.c", line 127: error #1431-D: (MISRA-C:2004 19.11/R) All macro identifiers in preprocessor directives shall be defined before use, except in #ifdef and #ifndef preprocessor directives and the defined() operator ("ON")
"../L3G4200D.c", line 127: error #1431-D: (MISRA-C:2004 19.11/R) All macro identifiers in preprocessor directives shall be defined before use, except in #ifdef and #ifndef preprocessor directives and the defined() operator ("ON")
"../L3G4200D.c", line 148: error #1431-D: (MISRA-C:2004 19.11/R) All macro identifiers in preprocessor directives shall be defined before use, except in #ifdef and #ifndef preprocessor directives and the defined() operator ("ON")
"../L3G4200D.c", line 148: error #1431-D: (MISRA-C:2004 19.11/R) All macro identifiers in preprocessor directives shall be defined before use, except in #ifdef and #ifndef preprocessor directives and the defined() operator ("ON")
Error limit reached.
100 errors detected in the compilation of "../L3G4200D.c".
Compilation terminated.
gmake: *** [L3G4200D.obj] Error 1
Building file: "../L3G4200D_Lcfg.c"
Invoking: ARM Compiler
"C:/ti/ccs901/ccs/tools/compiler/ti-cgt-arm_18.12.1.LTS/bin/armcl" -mv4 --code_state=32 --include_path="D:/HH-geegs/Sprints/MISRA_challenge/misra_challenge" --include_path="C:/ti/ccs901/ccs/tools/compiler/ti-cgt-arm_18.12.1.LTS/include" -g --diag_warning=225 --diag_wrap=off --display_error_number --check_misra="all,-1" --misra_advisory=error --misra_required=error --preproc_with_compile --preproc_dependency="L3G4200D_Lcfg.d_raw"  "../L3G4200D_Lcfg.c"
 
>> Compilation failure
subdir_rules.mk:9: recipe for target 'L3G4200D_Lcfg.obj' failed
"..\SPI.h", line 19: warning #1-D: last line of file ends without a newline
"..\L3G4200D_Cfg.h", line 16: error #1428-D: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"..\L3G4200D_Cfg.h", line 17: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"..\L3G4200D_Cfg.h", line 18: error #1428-D: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"..\L3G4200D_Cfg.h", line 18: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"..\L3G4200D_Cfg.h", line 19: error #1428-D: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"..\L3G4200D_Cfg.h", line 19: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"..\L3G4200D_Cfg.h", line 30: error #1428-D: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"..\L3G4200D_Cfg.h", line 31: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"..\L3G4200D_Lcfg.h", line 17: error #1461-D: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"..\L3G4200D_Lcfg.h", line 83: warning #1-D: last line of file ends without a newline
"..\L3G4200D.h", line 35: warning #1-D: last line of file ends without a newline
"../L3G4200D_Lcfg.c", line 13: error #1391-D: (MISRA-C:2004 9.2/R) Braces shall be used to indicate and match the structure in the non-zero initialization of arrays and structures
"../L3G4200D_Lcfg.c", line 13: error #1391-D: (MISRA-C:2004 9.2/R) Braces shall be used to indicate and match the structure in the non-zero initialization of arrays and structures
"../L3G4200D_Lcfg.c", line 14: error #1391-D: (MISRA-C:2004 9.2/R) Braces shall be used to indicate and match the structure in the non-zero initialization of arrays and structures
"../L3G4200D_Lcfg.c", line 14: error #1391-D: (MISRA-C:2004 9.2/R) Braces shall be used to indicate and match the structure in the non-zero initialization of arrays and structures
"../L3G4200D_Lcfg.c", line 15: error #1391-D: (MISRA-C:2004 9.2/R) Braces shall be used to indicate and match the structure in the non-zero initialization of arrays and structures
"../L3G4200D_Lcfg.c", line 16: error #1391-D: (MISRA-C:2004 9.2/R) Braces shall be used to indicate and match the structure in the non-zero initialization of arrays and structures
"../L3G4200D_Lcfg.c", line 16: error #1391-D: (MISRA-C:2004 9.2/R) Braces shall be used to indicate and match the structure in the non-zero initialization of arrays and structures
"../L3G4200D_Lcfg.c", line 17: error #1391-D: (MISRA-C:2004 9.2/R) Braces shall be used to indicate and match the structure in the non-zero initialization of arrays and structures
"../L3G4200D_Lcfg.c", line 18: error #1391-D: (MISRA-C:2004 9.2/R) Braces shall be used to indicate and match the structure in the non-zero initialization of arrays and structures
"../L3G4200D_Lcfg.c", line 18: error #1391-D: (MISRA-C:2004 9.2/R) Braces shall be used to indicate and match the structure in the non-zero initialization of arrays and structures
"../L3G4200D_Lcfg.c", line 19: error #1391-D: (MISRA-C:2004 9.2/R) Braces shall be used to indicate and match the structure in the non-zero initialization of arrays and structures
"../L3G4200D_Lcfg.c", line 19: error #1391-D: (MISRA-C:2004 9.2/R) Braces shall be used to indicate and match the structure in the non-zero initialization of arrays and structures
"../L3G4200D_Lcfg.c", line 20: error #1391-D: (MISRA-C:2004 9.2/R) Braces shall be used to indicate and match the structure in the non-zero initialization of arrays and structures
"../L3G4200D_Lcfg.c", line 20: error #1391-D: (MISRA-C:2004 9.2/R) Braces shall be used to indicate and match the structure in the non-zero initialization of arrays and structures
"../L3G4200D_Lcfg.c", line 21: error #1391-D: (MISRA-C:2004 9.2/R) Braces shall be used to indicate and match the structure in the non-zero initialization of arrays and structures
"../L3G4200D_Lcfg.c", line 22: error #1391-D: (MISRA-C:2004 9.2/R) Braces shall be used to indicate and match the structure in the non-zero initialization of arrays and structures
"../L3G4200D_Lcfg.c", line 22: error #1391-D: (MISRA-C:2004 9.2/R) Braces shall be used to indicate and match the structure in the non-zero initialization of arrays and structures
"../L3G4200D_Lcfg.c", line 23: error #1391-D: (MISRA-C:2004 9.2/R) Braces shall be used to indicate and match the structure in the non-zero initialization of arrays and structures
"../L3G4200D_Lcfg.c", line 23: error #1391-D: (MISRA-C:2004 9.2/R) Braces shall be used to indicate and match the structure in the non-zero initialization of arrays and structures
"../L3G4200D_Lcfg.c", line 24: error #1391-D: (MISRA-C:2004 9.2/R) Braces shall be used to indicate and match the structure in the non-zero initialization of arrays and structures
"../L3G4200D_Lcfg.c", line 24: error #1391-D: (MISRA-C:2004 9.2/R) Braces shall be used to indicate and match the structure in the non-zero initialization of arrays and structures
"../L3G4200D_Lcfg.c", line 25: warning #1-D: last line of file ends without a newline
30 errors detected in the compilation of "../L3G4200D_Lcfg.c".
gmake: *** [L3G4200D_Lcfg.obj] Error 1
gmake: Target 'all' not remade because of errors.

**** Build Finished ****
